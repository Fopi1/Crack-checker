generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id String @id @default(uuid())

  name     String
  email    String @unique
  password String

  likes Game[]

  accounts Account[]
  sessions Session[]
}

model Game {
  id String @id

  slug         String
  title        String
  isAAA        Boolean
  protections  String
  hackedGroups String
  releaseDate  String
  crackDate    String?
  shortImage   String

  steamId   Int?
  metaScore Int?
  userScore Float?

  likes User[]
  views Int    @default(0)

  categories Category[]
}

model Category {
  title String @id
  games Game[]
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
